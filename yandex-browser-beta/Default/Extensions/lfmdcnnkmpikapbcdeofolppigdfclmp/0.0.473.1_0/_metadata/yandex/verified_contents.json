[
  {
    "signed_content": {
      "signatures": [
        {
          "header": {
            "kid": "webstore"
          }, 
          "protected": "eyJhbGciOiJSUzI1NiJ9", 
          "signature": "I25PfSKzANrDwh2P1mmXOQPikRMzttVWK3FVCD-jvUN1ThNcT_oKmYNMj_K7J8r24_JchkiiSBK3HF5eQey8m1Y7zZGI6y3pxCv-EULE86Y90PImXzIUNhmceT6MR6aF7rPzTQ03sEESA3tzcW8YpqdvV8RHkjXT8R1Y9jkhrA2UYFJa7kE4njsUTgcRjdsacpffltTTEzESddVa1-37CfKQxH7rNbaLGljN6_UiTne30Fi-odD7n-EVr7N5vKY_YGCmQYtY6ejv2rjfIwSYhnfZSsLqRG3QFDMEzpr6R_OQaMjSqOXM7bvongbYOfVzoaiTwk7hYiXi0SoWnxQuEQ"
        }
      ], 
      "payload": ""
    }, 
    "description": "treehash per file"
  }
]